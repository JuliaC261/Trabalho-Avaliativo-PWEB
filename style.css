/* https://www.w3schools.com/w3css/4/w3.css 

https://www.w3schools.com/w3css/tryw3css_templates_travel.htm

https://fazerfrontedificil.netlify.app/html-and-css/index.html

*/



/* Quando "*" é utilizado no CSS, serve para definir regras de estilo para toda a página em geral, como a margem (margin) e a fonte que será usada como padrão (font-family). */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Raleway', sans-serif;
}

/* "Body" é usado para definir regras para todos os elementos HTML em uma tag <body>. "font-size" define o tamanho de fonte usada na página, levando em consideração o "font-family" da tag "*" logo acima e "color" define a cor do texto. Em Background temos "linear-gradient", assim deixando o fundo da página em um gradiente entre as duas cores selecionadas. */
body {
  height: 1200px;
  font-size: 18px;
  color: #5D6063;
  background: linear-gradient(#ffffff, #9989);
}

/* Este header é referente à navbar, "fixed" deixando-o fixo na página, fazendo aparecer mesmo que o usuário role a página. "Display: Flex" também exerce sua parte em permitir que o texto fique realmete centralizado na navbar, sendo uma boa alternativa para os floats."justify-content" serve para centralizar conteúdo, acontecendo o mesmo para os itens "Acessar mais", "Página Principal", "Menu" e "Sobre". "Width" e "Height" definem o tamanho dessa navbar e "padding" define a margem dentro dessa navbar para o texto. */
.header {
  position: fixed;
  display: flex;
  justify-content: center;
  width: 100%;
  height: 13%;
  padding: 50px;
  background: #413e41;
}

/* "Container" é referente à imagem logo abaixo da navbar e a faixa colorida com texto (.botao-laranja abaixo de .fotos)*/
.container {
  display: flex;
  justify-content: center;
}

/* Aqui, utilizamos a tag .fotos apenas para centralizar as fotos abaixo da imagem contida em .container */
.fotos {
  display: flex;
  align-items: center;
  justify-content: center;

}

/* Definimos por meio do "color" a cor branca para o texto, junto do fundo acizentado com "background-color". Mantemos o botão posicionado na esquerda com position absolute, preenchendo a imagem pelo left com o valor zero e com o valor de altura definida em 13% pelo "height". */
.botao-cinza {
 color: #FFFF;
 background-color: #413e41;
 position: absolute;
 left: 0;
 height: 13%;
} 


/* Foi usado o box-shadow para que tivesse o efeito de sombra no lado direto das imagens menores de acordo com o id shadow  */
.shadow {
  box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.2);
}

/* Aqui é utilizado "a:visited" para definir uma regra para links, assim que clicados mudarão de cor ou adicionarão algum detalhe. Entretanto, no nosso caso, é definido que, se clicados ou já visitados anteriormente, os links nã mudarão sua aparência. */
a:link,
a:visited {
  color: #ffffff;
  text-decoration: none;
}

/* "Hover" é geralmente usado para links, deixando-os, por exemplo, de outra cor quando passar o mouse pelo link ou botão. Neste caso, utizamos "text-decoration" e "hover" juntos para que, quando fosse passado o mouse por cima dos itens no menu, as palavras ficassem sublinhadas. */
a:hover {
  text-decoration: underline;
}

/* Sem esse item no CSS, os itens do menu de "Acessar mais" continuariam aparecendo mesmo sem passar o mouse por cima da opção do header, ou seja, deixando de ser invisível. */
.menu > li {
  display: inline;
  margin-right: 50px;
}

/* Aqui temos a parte onde um pequeno menu com opções aparecerá se passarmos o mouse por cima do item "Acessar Mais" no menu. Utilizamos "flex-direction" para disponibilizar os itens em coluna, "background" para colorirmos o fundo e "border-radius" para arredondarmos as pontas desse menu. */
.dropdown:hover .features-menu {  
  display: flex;
  flex-direction: column;
  background: #969696;
  border-radius: 5px;
  padding-top: 60px;

  position: absolute; 
  top: -25px;
  left: -30px;
  z-index: 1;
}

/* Este item permite que o menu de "Acessar Mais" fique escondido até que se passe o mouse por cima  */
.features-menu {
  display: none;
}

/* Aqui utilizamos a tag "li" para estilizarmos a lista de itens do menu escondido em "Acessar Mais". Adicionamos bordas para a lista ficar mais visualmente agradável (e visível) e, também, fazer com que seja uma lista não numerada e sem pontos. */
.features-menu li {
  list-style: none;
  border-bottom: 1px solid #FFF;

  padding: 0 40px 10px 20px;
  margin: 10px;
}

/* Este item serve para definirmos o fim da lista de itens do menu invisível de "Acessar Mais", fazendo com que "Reservar" seja o último item dessa lista. */
.features-menu li:last-of-type {
  border-bottom: none;
} 

/* Este item ira manter os items encontrados em "Acessar Mais" de forma "relative", que seria que o elemento irá ficar em seu lugar em relação ao fluxo da página. */
.dropdown {
  position: relative;
}

/* Aqui fazemos com que o texto "Acessar Mais" ainda apareça quando o menu escondido for aberto por meio de "z-index". "z-index" serve como uma definição de camadas na nossa página, no nosso caso, o item "Acessar Mais" está apenas uma camada acima do menu invisível, fazendo com que o texto de "Acessar Mais" apareça independentemente de o menu invísivel estar ativo ou não. */
.dropdown > span {
  z-index: 2;
  position: relative; 
  cursor: pointer;
}

/* Definimos o footer como um item flex. */
.footer {
  display: flex;
}

/* Aqui, definimos que o footer tem cor #333333, altura de 50 pixels ("height") e "flex: 1" define como um ítem será posicionado para no espaço disponível dentro do container. */
.footer-item {
  background-color: #333333;
  height: 130px;
  flex: 1;
}

/* Aqui temos uma configuração muito parecida com o que fizemos com os itens no header, basicamente fazendo com que o texto fique um pouco menor, centralizado no footer e com a cor de texto branca. */
.item11 {
  font-size: 16px;
  color: white;
  position: absolute;
  display: flex;
  justify-content: center;
  width: 100%;
  height: 13%;
  padding: 50px;
}